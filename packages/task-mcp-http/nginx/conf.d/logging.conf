# Logging Configuration for Task MCP HTTP Server
# Comprehensive access and error logging formats for monitoring and debugging

# Custom log format for API monitoring
log_format api_main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'cs=$upstream_cache_status '
                   'rid="$request_id" '
                   'ssl="$ssl_protocol" "$ssl_cipher" '
                   'method="$request_method" uri="$request_uri" '
                   'host="$host" server="$server_name"';

# Detailed log format for security monitoring
log_format security_main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time '
                       'req_len=$request_length '
                       'resp_len=$body_bytes_sent '
                       'rid="$request_id" '
                       'auth="$http_authorization" '
                       'cookie="$http_cookie" '
                       'ua="$http_user_agent" '
                       'cf_ray="$http_cf_ray"';

# SSE-specific log format
log_format sse_main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'rid="$request_id" '
                   'sse_duration=$connection_requests '
                   'bytes_sent=$body_bytes_sent '
                   'connection="$connection" '
                   'accept="$http_accept"';

# JSON log format for structured logging
log_format json_main escape=json
    '{'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"http_x_forwarded_for":"$http_x_forwarded_for",'
    '"request_id":"$request_id",'
    '"upstream_addr":"$upstream_addr",'
    '"upstream_connect_time":"$upstream_connect_time",'
    '"upstream_header_time":"$upstream_header_time",'
    '"upstream_response_time":"$upstream_response_time",'
    '"upstream_status":"$upstream_status",'
    '"request_method":"$request_method",'
    '"request_uri":"$request_uri",'
    '"server_name":"$server_name",'
    '"request_length":"$request_length",'
    '"bytes_sent":"$body_bytes_sent",'
    '"ssl_protocol":"$ssl_protocol",'
    '"ssl_cipher":"$ssl_cipher",'
    '"host":"$host",'
    '"connection":"$connection",'
    '"http_authorization":"$http_authorization"'
    '}';

# Error log format
log_format error_main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'rt=$request_time '
                     'error="$upstream_addr" '
                     'status="$upstream_status"';

# Access log configuration
access_log /var/log/nginx/access.log api_main;

# Error log configuration
error_log /var/log/nginx/error.log warn;

# SSE-specific logging (can be written to separate file)
# access_log /var/log/nginx/sse_access.log sse_main;

# Security-specific logging (for security monitoring)
# access_log /var/log/nginx/security_access.log security_main;

# JSON structured logging (for log aggregation systems)
# access_log /var/log/nginx/json_access.log json_main;

# Disable logging for health checks (to reduce noise)
location = /healthz {
    access_log off;
    proxy_pass http://task_mcp_health_backend;
}

location = /readyz {
    access_log off;
    proxy_pass http://task_mcp_health_backend;
}

# Reduce logging for static assets
location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    access_log off;
    expires 1y;
    add_header Cache-Control "public, immutable";
}

# Log buffering for performance
access_log /var/log/nginx/access.log api_main buffer=32k flush=5m;
error_log /var/log/nginx/error.log warn buffer=32k flush=5m;

# Log rotation settings (typically handled by logrotate)
# These are example settings for logrotate configuration:
# /var/log/nginx/*.log {
#     daily
#     missingok
#     rotate 30
#     compress
#     delaycompress
#     notifempty
#     create 644 nginx nginx
#     postrotate
#         /bin/kill -USR1 `cat /run/nginx.pid 2> /dev/null` 2> /dev/null || true
#     endscript
# }