# Task MCP HTTP Server - Production Environment
# Hardened production configuration with maximum security and performance

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name task-mcp.fission.ai api.task-mcp.fission.ai mcp.fission.ai;
    
    # Security headers for HTTP redirect
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server - main production configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name task-mcp.fission.ai api.task-mcp.fission.ai mcp.fission.ai;
    
    # SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Production logging
    access_log /var/log/nginx/prod-access.log json_main buffer=64k flush=1m;
    error_log /var/log/nginx/prod-error.log warn buffer=32k flush=1m;
    
    # Enhanced security headers
    include /etc/nginx/conf.d/security.conf;
    
    # Additional production security headers
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CORS for production (restricted origins)
    add_header Access-Control-Allow-Origin "https://task-mcp.fission.ai, https://api.task-mcp.fission.ai" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-API-Key" always;
    add_header Access-Control-Max-Age "86400" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Strict rate limiting for production
    limit_req zone=api_burst burst=10 nodelay;
    limit_req zone=sse_burst burst=5 nodelay;
    limit_req zone=auth_burst burst=15 nodelay;
    
    # Strict connection limits
    limit_conn conn_limit_per_ip 10;
    
    # Request size limits
    client_max_body_size 5M;
    client_body_buffer_size 64k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 2k;
    
    # Main application location
    location / {
        # Rate limiting
        limit_req zone=api_burst burst=10 nodelay;
        
        # Proxy settings
        proxy_pass http://task_mcp_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Production timeouts
        proxy_connect_timeout 15s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Optimized buffering
        proxy_buffering off;
        proxy_buffer_size 2k;
        proxy_buffers 4 2k;
        proxy_busy_buffers_size 4k;
        
        # Security settings
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
        
        # Error handling
        proxy_intercept_errors on;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 30s;
    }
    
    # SSE endpoint with production hardening
    location /sse {
        # Strict rate limiting for SSE
        limit_req zone=sse_burst burst=5 nodelay;
        limit_conn conn_limit_per_ip 5;
        
        # Include SSE configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Production-specific SSE settings
        proxy_read_timeout 1800s;  # 30 minutes max
        proxy_send_timeout 1800s;
        
        # Enhanced SSE security
        proxy_set_header X-Content-Type-Options "nosniff";
        proxy_set_header X-Frame-Options "DENY";
        proxy_set_header X-XSS-Protection "1; mode=block";
        
        # SSE logging
        access_log /var/log/nginx/prod-sse-access.log sse_main buffer=32k flush=30s;
    }
    
    # MCP endpoint with production hardening
    location /mcp {
        # Rate limiting for MCP
        limit_req zone=api_burst burst=8 nodelay;
        limit_conn conn_limit_per_ip 8;
        
        # Include streaming configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Production-specific MCP settings
        proxy_read_timeout 300s;  # 5 minutes max
        proxy_send_timeout 300s;
        
        # MCP logging
        access_log /var/log/nginx/prod-mcp-access.log sse_main buffer=32k flush=30s;
    }
    
    # Health check endpoints (no logging)
    location /healthz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
        
        # Health check security
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    location /readyz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
        
        # Health check security
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Security metrics endpoint (authenticated and restricted)
    location /security/metrics {
        # IP restriction
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://task_mcp_backend;
        # Authentication handled by backend
        
        # Security logging
        access_log /var/log/nginx/prod-security-access.log security_main;
    }
    
    # Metrics endpoint (monitoring only)
    location /metrics {
        # Strict IP restriction
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://task_mcp_backend;
        access_log /var/log/nginx/prod-metrics-access.log api_main;
    }
    
    # API documentation (authenticated)
    location /docs {
        # IP restriction
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://task_mcp_backend;
        # Authentication handled by backend
    }
    
    # Static assets with aggressive caching
    location /static/ {
        alias /var/www/task-mcp/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # Security for static assets
        location ~* \.(js|css)$ {
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # No logging for static assets
        access_log off;
    }
    
    # API versioning
    location /v1/ {
        rewrite ^/v1/(.*)$ /$1 break;
        proxy_pass http://task_mcp_backend;
        include /etc/nginx/conf.d/security.conf;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Custom error handling
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Rate limit exceeded page
    error_page 429 /429.html;
    location = /429.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Maintenance mode support
    error_page 503 @maintenance;
    location @maintenance {
        root /var/www/task-mcp;
        try_files /maintenance.html =503;
    }
    
    # Block malicious requests
    location ~* \.(aspx|php|jsp|cgi|pl|py|sh)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common attack patterns
    location ~* \.(exe|zip|tar|gz|rar|sql|bak)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# API subdomain configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.task-mcp.fission.ai;
    
    # SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # API-specific logging
    access_log /var/log/nginx/api-prod-access.log json_main buffer=64k flush=1m;
    error_log /var/log/nginx/api-prod-error.log warn buffer=32k flush=1m;
    
    # Enhanced security for API subdomain
    include /etc/nginx/conf.d/security.conf;
    
    # API-only endpoints
    location / {
        # Strict rate limiting for API
        limit_req zone=api_burst burst=15 nodelay;
        limit_conn conn_limit_per_ip 15;
        
        # Proxy to backend
        proxy_pass http://task_mcp_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-API-Subdomain "true";
        
        # API timeouts
        proxy_connect_timeout 15s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
        
        proxy_buffering off;
        proxy_intercept_errors on;
    }
    
    # Include SSE and MCP configurations
    location /sse {
        include /etc/nginx/conf.d/sse.conf;
        limit_req zone=sse_burst burst=8 nodelay;
    }
    
    location /mcp {
        include /etc/nginx/conf.d/sse.conf;
        limit_req zone=api_burst burst=12 nodelay;
    }
    
    # Health checks for API
    location /healthz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }
}