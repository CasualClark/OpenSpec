# Task MCP HTTP Server - Staging Environment
# Production-like configuration for testing and validation

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name staging.task-mcp.local staging.task-mcp.fission.ai;
    
    # Security headers for HTTP redirect
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server - main staging configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name staging.task-mcp.local staging.task-mcp.fission.ai;
    
    # SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Staging logging
    access_log /var/log/nginx/staging-access.log api_main;
    error_log /var/log/nginx/staging-error.log warn;
    
    # Security headers
    include /etc/nginx/conf.d/security.conf;
    
    # CORS for staging (specific origins)
    add_header Access-Control-Allow-Origin "https://staging.task-mcp.local, https://staging.task-mcp.fission.ai" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Max-Age "86400" always;
    
    # Rate limiting for staging
    limit_req zone=api_burst burst=20 nodelay;
    limit_req zone=sse_burst burst=10 nodelay;
    limit_req zone=auth_burst burst=30 nodelay;
    
    # Connection limits
    limit_conn conn_limit_per_ip 15;
    
    # Main application location
    location / {
        # Proxy settings
        proxy_pass http://task_mcp_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffering
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Error handling
        proxy_intercept_errors on;
    }
    
    # SSE endpoint
    location /sse {
        # Include SSE configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Staging-specific SSE logging
        access_log /var/log/nginx/staging-sse-access.log sse_main;
    }
    
    # MCP endpoint
    location /mcp {
        # Include streaming configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Staging-specific MCP logging
        access_log /var/log/nginx/staging-mcp-access.log sse_main;
    }
    
    # Health check endpoints
    location /healthz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
    }
    
    location /readyz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
    }
    
    # Security metrics endpoint (authenticated)
    location /security/metrics {
        proxy_pass http://task_mcp_backend;
        # Authentication handled by backend
    }
    
    # Staging debug endpoint (restricted)
    location /debug {
        # IP restriction for debug access
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://task_mcp_backend;
        proxy_set_header X-Debug-Mode "staging";
    }
    
    # Static assets
    location /static/ {
        alias /var/www/task-mcp/static/;
        expires 1d;
        add_header Cache-Control "public, immutable";
        
        # Security for static assets
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # API documentation
    location /docs {
        proxy_pass http://task_mcp_backend;
        # No authentication for docs in staging
    }
    
    # Metrics endpoint (for monitoring)
    location /metrics {
        # IP restriction
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://task_mcp_backend;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Custom error handling for staging
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Maintenance page support
    error_page 503 @maintenance;
    location @maintenance {
        root /var/www/task-mcp;
        try_files /maintenance.html =503;
    }
}

# Additional staging server for load testing
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name loadtest.task-mcp.local;
    
    # SSL configuration
    include /etc/nginx/conf.d/ssl.conf;
    
    # Load test logging
    access_log /var/log/nginx/loadtest-access.log api_main;
    error_log /var/log/nginx/loadtest-error.log warn;
    
    # Relaxed rate limiting for load testing
    limit_req zone=api_burst burst=100 nodelay;
    limit_req zone=sse_burst burst=50 nodelay;
    
    # Higher connection limits for load testing
    limit_conn conn_limit_per_ip 50;
    
    # Same location blocks as main staging server
    location / {
        proxy_pass http://task_mcp_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_set_header X-Load-Test "true";
        
        # Extended timeouts for load testing
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        proxy_buffering off;
    }
    
    # Include other location blocks from main staging config
    include /etc/nginx/sites-available/task-mcp-staging.conf.locations;
}