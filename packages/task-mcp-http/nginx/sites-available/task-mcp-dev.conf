# Task MCP HTTP Server - Development Environment
# Development configuration with relaxed security and enhanced debugging

server {
    listen 80;
    listen [::]:80;
    server_name dev.task-mcp.local localhost 127.0.0.1;
    
    # Redirect to HTTPS in production, but allow HTTP in dev
    # return 301 https://$server_name$request_uri;
    
    # Development logging (verbose)
    access_log /var/log/nginx/dev-access.log json_main;
    error_log /var/log/nginx/dev-error.log debug;
    
    # CORS for development (allow all origins)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, X-Debug" always;
    add_header Access-Control-Max-Age "86400" always;
    
    # Development security headers (relaxed)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    # Skip HSTS in development
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Main application location
    location / {
        # Rate limiting (relaxed for development)
        limit_req zone=api_burst burst=100 nodelay;
        
        # Proxy settings
        proxy_pass http://task_mcp_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Development timeouts (longer for debugging)
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        
        # Buffering settings
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Error handling
        proxy_intercept_errors on;
    }
    
    # SSE endpoint with development optimizations
    location /sse {
        # Include SSE configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Development-specific SSE settings
        proxy_read_timeout 7200s;  # 2 hours for debugging
        proxy_send_timeout 7200s;
        
        # Verbose SSE logging
        access_log /var/log/nginx/dev-sse-access.log sse_main;
    }
    
    # MCP endpoint for NDJSON streaming
    location /mcp {
        # Include streaming configuration
        include /etc/nginx/conf.d/sse.conf;
        
        # Development-specific MCP settings
        proxy_read_timeout 1800s;  # 30 minutes for debugging
        
        # Verbose MCP logging
        access_log /var/log/nginx/dev-mcp-access.log sse_main;
    }
    
    # Health check endpoints
    location /healthz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
    }
    
    location /readyz {
        proxy_pass http://task_mcp_health_backend;
        access_log off;
    }
    
    # Security metrics endpoint
    location /security/metrics {
        proxy_pass http://task_mcp_backend;
        # No authentication required in development
    }
    
    # Development debug endpoint
    location /debug {
        proxy_pass http://task_mcp_backend;
        proxy_set_header X-Debug-Mode "true";
    }
    
    # Static assets (if any)
    location /static/ {
        alias /var/www/task-mcp/static/;
        expires 1h;
        add_header Cache-Control "public";
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Development-specific error handling
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTPS development server (optional)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dev.task-mcp.local localhost;
    
    # Development SSL configuration
    ssl_certificate /etc/nginx/ssl/dev-task-mcp.crt;
    ssl_certificate_key /etc/nginx/ssl/dev-task-mcp.key;
    
    # Relaxed SSL for development
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_verify_client off;
    
    # Skip SSL verification in development
    # ssl_stapling off;
    # ssl_stapling_verify off;
    
    # Include the same location blocks as HTTP
    include /etc/nginx/sites-available/task-mcp-dev.conf.locations;
}