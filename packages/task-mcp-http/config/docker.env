# Task MCP HTTP Server - Docker Environment Configuration
# This file contains Docker-specific environment variables

# ========================================
# Container Configuration
# ========================================
NODE_ENV=production
PORT=3000
HOST=0.0.0.0

# ========================================
# TLS Configuration (for container)
# ========================================
# TLS is typically handled by reverse proxy in containerized deployments
TLS_ENABLED=false
# TLS_KEY=/etc/ssl/certs/server.key
# TLS_CERT=/etc/ssl/certs/server.crt

# ========================================
# Authentication & Security
# ========================================
# Container tokens (override with secrets in production)
AUTH_TOKENS=${AUTH_TOKENS}

# Container security settings
SECURITY_HEADERS_ENABLED=true
STRICT_TRANSPORT_SECURITY=false  # Handled by reverse proxy
RATE_LIMIT_BURST=90
RATE_LIMIT_WINDOW_MS=60000

# ========================================
# CORS Configuration
# ========================================
# Configure based on your reverse proxy setup
ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://task-mcp.fission.ai}

# ========================================
# Rate Limiting
# ========================================
RATE_LIMIT=60

# Enable distributed rate limiting for container orchestration
ENABLE_DISTRIBUTED_RATE_LIMIT=${ENABLE_DISTRIBUTED_RATE_LIMIT:-false}
REDIS_URL=${REDIS_URL:-redis://redis:6379}

# ========================================
# SSE Configuration
# ========================================
HEARTBEAT_MS=25000
MAX_SSE_CONNECTIONS=500
SSE_CONNECTION_TIMEOUT=300000

# ========================================
# Response Limits
# ========================================
MAX_RESPONSE_SIZE_KB=1024
MAX_REQUEST_SIZE_KB=512

# ========================================
# Logging Configuration
# ========================================
LOG_LEVEL=${LOG_LEVEL:-info}
LOG_FORMAT=json

# Container audit logging
AUDIT_LOG_ENABLED=true
AUDIT_LOG_LEVEL=info
AUDIT_LOG_FILE=/var/log/task-mcp/audit.log

# Container log settings
LOG_MAX_SIZE=50m
LOG_MAX_FILES=5

# ========================================
# Container Performance
# ========================================
WORKER_PROCESSES=0  # Auto-detect

# Container connection limits
MAX_CONNECTIONS=5000
KEEPALIVE_TIMEOUT=65000
KEEPALIVE_REQUESTS=100

# Container buffer sizes
CLIENT_BODY_BUFFER_SIZE=16k
CLIENT_HEADER_BUFFER_SIZE=1k
LARGE_CLIENT_HEADER_BUFFERS=4 8k

# ========================================
# Health Check Configuration
# ========================================
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_GRACE_PERIOD=10000

# ========================================
# Metrics & Monitoring
# ========================================
METRICS_ENABLED=true
METRICS_PORT=9090
METRICS_PATH=/metrics
PROMETHEUS_ENABLED=true

# ========================================
# Container Process Management
# ========================================
# Container doesn't use PM2 typically, but available if needed
PM2_INSTANCES=1
PM2_MAX_MEMORY_RESTART=1G
PM2_RESTART_DELAY=4000

# Container graceful shutdown
GRACEFUL_SHUTDOWN_TIMEOUT=30000

# ========================================
# Container Security Headers
# ========================================
CSP_DEFAULT_SRC='self'
CSP_SCRIPT_SRC='self'
CSP_STYLE_SRC='self' 'unsafe-inline'
CSP_IMG_SRC='self' data: https:
CSP_CONNECT_SRC='self'
CSP_FONT_SRC='self'
CSP_OBJECT_SRC='none'
CSP_MEDIA_SRC='self'
CSP_FRAME_SRC='none'

# ========================================
# Container Working Directory
# ========================================
WORKING_DIRECTORY=/app

# ========================================
# Container-Specific Settings
# ========================================
# Container orchestration settings
POD_NAME=${POD_NAME:-task-mcp-http}
POD_IP=${POD_IP:-127.0.0.1}
NAMESPACE=${NAMESPACE:-default}

# Container resource limits
MEMORY_LIMIT=${MEMORY_LIMIT:-512Mi}
CPU_LIMIT=${CPU_LIMIT:-1000m}

# Container networking
SERVICE_NAME=${SERVICE_NAME:-task-mcp-http}
SERVICE_PORT=${SERVICE_PORT:-3000}

# ========================================
# Docker Compose Specific
# ========================================
# Docker network settings
COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-task-mcp}

# Docker service discovery
NGINX_HOST=${NGINX_HOST:-nginx}
REDIS_HOST=${REDIS_HOST:-redis}
PROMETHEUS_HOST=${PROMETHEUS_HOST:-prometheus}

# ========================================
# Container Runtime
# ========================================
# Container metadata
CONTAINER_IMAGE=${CONTAINER_IMAGE:-task-mcp-http:latest}
CONTAINER_CREATED=${CONTAINER_CREATED}
GIT_COMMIT=${GIT_COMMIT}
BUILD_DATE=${BUILD_DATE}

# ========================================
# External Services (Container)
# ========================================
# External service URLs
EXTERNAL_API_URL=${EXTERNAL_API_URL}
WEBHOOK_SECRET=${WEBHOOK_SECRET}

# Container feature flags
FEATURE_ADVANCED_METRICS=true
FEATURE_REQUEST_TRACING=true
FEATURE_RESPONSE_CACHING=false

# ========================================
# Container Monitoring
# ========================================
# Health check endpoints
HEALTHZ_ENDPOINT=/healthz
READYZ_ENDPOINT=/readyz
METRICS_ENDPOINT=/metrics

# Container readiness and liveness
READINESS_CHECK_ENABLED=true
LIVENESS_CHECK_ENABLED=true
STARTUP_CHECK_ENABLED=true

# ========================================
# Container Security
# ========================================
# Container user settings
PUID=${PUID:-1000}
PGID=${PGID:-1000}

# Container file permissions
LOG_DIR_PERMISSIONS=755
CERT_DIR_PERMISSIONS=755

# ========================================
# Container Debugging
# ========================================
# Debug settings (disable in production)
DEBUG_MODE=${DEBUG_MODE:-false}
VERBOSE_ERRORS=${VERBOSE_ERRORS:-false}

# Container profiling
PROFILING_ENABLED=${PROFILING_ENABLED:-false}
PROFILING_PORT=${PROFILING_PORT:-9229}